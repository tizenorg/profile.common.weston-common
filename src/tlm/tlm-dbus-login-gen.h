/*
 * Generated by gdbus-codegen 2.38.2. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __TLM_DBUS_LOGIN_GEN_H__
#define __TLM_DBUS_LOGIN_GEN_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.tizen.Tlm.Login */

#define TLM_DBUS_TYPE_LOGIN (tlm_dbus_login_get_type ())
#define TLM_DBUS_LOGIN(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TLM_DBUS_TYPE_LOGIN, TlmDbusLogin))
#define TLM_DBUS_IS_LOGIN(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TLM_DBUS_TYPE_LOGIN))
#define TLM_DBUS_LOGIN_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TLM_DBUS_TYPE_LOGIN, TlmDbusLoginIface))

struct _TlmDbusLogin;
typedef struct _TlmDbusLogin TlmDbusLogin;
typedef struct _TlmDbusLoginIface TlmDbusLoginIface;

struct _TlmDbusLoginIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_login_user) (
    TlmDbusLogin *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_seat_id,
    const gchar *arg_username,
    const gchar *arg_password,
    GVariant *arg_environ);

  gboolean (*handle_logout_user) (
    TlmDbusLogin *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_seat_id);

  gboolean (*handle_switch_user) (
    TlmDbusLogin *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_seat_id,
    const gchar *arg_username,
    const gchar *arg_password,
    GVariant *arg_environ);

};

GType tlm_dbus_login_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *tlm_dbus_login_interface_info (void);
guint tlm_dbus_login_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void tlm_dbus_login_complete_login_user (
    TlmDbusLogin *object,
    GDBusMethodInvocation *invocation);

void tlm_dbus_login_complete_logout_user (
    TlmDbusLogin *object,
    GDBusMethodInvocation *invocation);

void tlm_dbus_login_complete_switch_user (
    TlmDbusLogin *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void tlm_dbus_login_call_login_user (
    TlmDbusLogin *proxy,
    const gchar *arg_seat_id,
    const gchar *arg_username,
    const gchar *arg_password,
    GVariant *arg_environ,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean tlm_dbus_login_call_login_user_finish (
    TlmDbusLogin *proxy,
    GAsyncResult *res,
    GError **error);

gboolean tlm_dbus_login_call_login_user_sync (
    TlmDbusLogin *proxy,
    const gchar *arg_seat_id,
    const gchar *arg_username,
    const gchar *arg_password,
    GVariant *arg_environ,
    GCancellable *cancellable,
    GError **error);

void tlm_dbus_login_call_logout_user (
    TlmDbusLogin *proxy,
    const gchar *arg_seat_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean tlm_dbus_login_call_logout_user_finish (
    TlmDbusLogin *proxy,
    GAsyncResult *res,
    GError **error);

gboolean tlm_dbus_login_call_logout_user_sync (
    TlmDbusLogin *proxy,
    const gchar *arg_seat_id,
    GCancellable *cancellable,
    GError **error);

void tlm_dbus_login_call_switch_user (
    TlmDbusLogin *proxy,
    const gchar *arg_seat_id,
    const gchar *arg_username,
    const gchar *arg_password,
    GVariant *arg_environ,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean tlm_dbus_login_call_switch_user_finish (
    TlmDbusLogin *proxy,
    GAsyncResult *res,
    GError **error);

gboolean tlm_dbus_login_call_switch_user_sync (
    TlmDbusLogin *proxy,
    const gchar *arg_seat_id,
    const gchar *arg_username,
    const gchar *arg_password,
    GVariant *arg_environ,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TLM_DBUS_TYPE_LOGIN_PROXY (tlm_dbus_login_proxy_get_type ())
#define TLM_DBUS_LOGIN_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TLM_DBUS_TYPE_LOGIN_PROXY, TlmDbusLoginProxy))
#define TLM_DBUS_LOGIN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TLM_DBUS_TYPE_LOGIN_PROXY, TlmDbusLoginProxyClass))
#define TLM_DBUS_LOGIN_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TLM_DBUS_TYPE_LOGIN_PROXY, TlmDbusLoginProxyClass))
#define TLM_DBUS_IS_LOGIN_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TLM_DBUS_TYPE_LOGIN_PROXY))
#define TLM_DBUS_IS_LOGIN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TLM_DBUS_TYPE_LOGIN_PROXY))

typedef struct _TlmDbusLoginProxy TlmDbusLoginProxy;
typedef struct _TlmDbusLoginProxyClass TlmDbusLoginProxyClass;
typedef struct _TlmDbusLoginProxyPrivate TlmDbusLoginProxyPrivate;

struct _TlmDbusLoginProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  TlmDbusLoginProxyPrivate *priv;
};

struct _TlmDbusLoginProxyClass
{
  GDBusProxyClass parent_class;
};

GType tlm_dbus_login_proxy_get_type (void) G_GNUC_CONST;

void tlm_dbus_login_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
TlmDbusLogin *tlm_dbus_login_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
TlmDbusLogin *tlm_dbus_login_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void tlm_dbus_login_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
TlmDbusLogin *tlm_dbus_login_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
TlmDbusLogin *tlm_dbus_login_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TLM_DBUS_TYPE_LOGIN_SKELETON (tlm_dbus_login_skeleton_get_type ())
#define TLM_DBUS_LOGIN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TLM_DBUS_TYPE_LOGIN_SKELETON, TlmDbusLoginSkeleton))
#define TLM_DBUS_LOGIN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TLM_DBUS_TYPE_LOGIN_SKELETON, TlmDbusLoginSkeletonClass))
#define TLM_DBUS_LOGIN_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TLM_DBUS_TYPE_LOGIN_SKELETON, TlmDbusLoginSkeletonClass))
#define TLM_DBUS_IS_LOGIN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TLM_DBUS_TYPE_LOGIN_SKELETON))
#define TLM_DBUS_IS_LOGIN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TLM_DBUS_TYPE_LOGIN_SKELETON))

typedef struct _TlmDbusLoginSkeleton TlmDbusLoginSkeleton;
typedef struct _TlmDbusLoginSkeletonClass TlmDbusLoginSkeletonClass;
typedef struct _TlmDbusLoginSkeletonPrivate TlmDbusLoginSkeletonPrivate;

struct _TlmDbusLoginSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  TlmDbusLoginSkeletonPrivate *priv;
};

struct _TlmDbusLoginSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType tlm_dbus_login_skeleton_get_type (void) G_GNUC_CONST;

TlmDbusLogin *tlm_dbus_login_skeleton_new (void);


G_END_DECLS

#endif /* __TLM_DBUS_LOGIN_GEN_H__ */
